import streamlit as st

from datetime import datetime
import numpy as np
import pandas as pd
import os
# import xlsxwriter
# import openpyxl

st.title('üéà Streamlit-test_1/streamlit_app.py')

st.write('Hello world!')

#-----------------
st.title("–¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑—É—á–µ–Ω–∏—è Streamlit")
st.subheader("2024-11-29 12:30. Smolenishev Oleg")

st.write("2024-11-30 10:35 —Ä–∞–±–æ—Ç–∞—é –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞. –ö–∞–∫ –ª–æ–∞–ª—å–Ω–æ —Ä–∞–±–æ–∞—Ç—å –≤ —Å–≤–æ–µ–º VSC, —á—Ç–æ –±—ã –æ–±–Ω–æ–≤–ª—è–ª—è GitHub –∏ –ø–æ—Ç–æ–º —É–∂–µ Stremlit")

now = datetime.now()

now_2 = now.strftime("%Y-%m-%d %H:%M")

st.write(now)
st.write(now_2)

st.divider()
st.subheader("–¢–∞–±–ª–∏—Ü—ã")

df1 = pd.DataFrame({
    '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ': ["–ü–µ—Ä–≤—ã–π", "–í—Ç–æ—Ä–æ–π"],
    '–ó–Ω–∞—á–µ–Ω–∏–µ': [10, 20]
})

st.table(df1)

df2 = st.data_editor(df1)

#st.table(df2)

st.metric(label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã: ", value=len(df1))
st.metric(label="–°—É–º–º–∞ –ø–æ —Å—Ç–æ–ª–±—Ü—É –ó–Ω–∞—á–µ–Ω–∏–µ: ", value=df1['–ó–Ω–∞—á–µ–Ω–∏–µ'].sum())

st.divider()

st.subheader("–ì—Ä–∞—Ñ–∏–∫–∏")

df3 = pd.DataFrame(
    np.random.rand(10, 4),
    columns=['A', 'B', 'C', 'D']
)

st.table(df3)
st.area_chart(df3)
st.line_chart(df3)
st.scatter_chart(df3[['A', 'B']])


st.divider()
st.subheader("–°–ª–∞–π–¥–µ—Ä")

x = st.slider("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ–ñ ", 1, 10)
st.write("–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: ", x)


st.divider()
st.subheader("–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã")

col1, col2 = st.columns(2)

with col1:
    st.write("–°—Ç–æ–ª–±–µ—Ü 1")

with col2:
    st.write("–°—Ç–æ–ª–±–µ—Ü 2")


with st.sidebar:
    st.header("Slidebar")


st.divider()
st.subheader("–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ xlsx. –ò—Å—Ç–æ—á–Ω–∏–∫: –î–ï–ú–û-–±–∞–∑–∞")
# base1.xlsx

df = pd.read_excel('base1.xlsx', sheet_name='base')

st.table(df.head(2))

st.divider()

df.rename(columns={'–î–∞—Ç–∞': 'DATA', '–°—á–µ—Ç –î—Ç': 'SD', '–°—É–±–∫–æ–Ω—Ç–æ1 –î—Ç': 'SKD1', '–°—É–±–∫–æ–Ω—Ç–æ2 –î—Ç': 'SKD2', '–°—É–±–∫–æ–Ω—Ç–æ3 –î—Ç': 'SKD3', '–°—á–µ—Ç –ö—Ç': 'SK', 
        '–°—É–±–∫–æ–Ω—Ç–æ1 –ö—Ç': 'SKK1', '–°—É–±–∫–æ–Ω—Ç–æ2 –ö—Ç': 'SKK2', '–°—É–±–∫–æ–Ω—Ç–æ3 –ö—Ç': 'SKK3', '–°—É–º–º–∞': 'SUMMA'}, inplace=True)

df = df[(df['SK']=='90.01.1') | (df['SD']=='90.02.1')]

df['ST'] = (df['SUMMA']/1000).round(2)
df['DATA'] = pd.to_datetime(df['DATA'], dayfirst=True)
df['–ì–æ–¥']=pd.DatetimeIndex(df['DATA']).year.astype('object')
df['–ú–µ—Å—è—Ü'] = pd.DatetimeIndex(df['DATA']).month.astype('object')
df['–î–µ–Ω—å'] = pd.DatetimeIndex(df['DATA']).day.astype('object')
df['–ö–≤–∞—Ä—Ç–∞–ª'] = pd.DatetimeIndex(df['DATA']).quarter.astype('object')
df['YM'] = df['DATA'].dt.to_period('M')

df = df[df['–ì–æ–¥']>=2021]

df['–°—Ç–∞—Ç—å—è'] = ''
df.loc[df['SK']=='90.01.1', '–°—Ç–∞—Ç—å—è'] = '–ü—Ä–æ–¥–∞–∂–∏'
df.loc[df['SD']=='90.02.1', '–°—Ç–∞—Ç—å—è'] = '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å'

df['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] = ''
df.loc[df['SK']=='90.01.1', '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] = df['SKK3']
df.loc[((df['SD']=='90.02.1') & (df['SK']=='41.01')), '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] = df['SKK1']
df.loc[((df['SD']=='90.02.1') & (df['SK']=='45.01')), '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] = df['SKK2']

df['–î–°'] = 0
df.loc[df['SK']=='90.01.1', '–î–°'] = df['ST'] /1.2
df.loc[df['SD']=='90.02.1', '–î–°'] = df['ST']*-1

df['–ü—Ä–æ–¥–∞–∂–∏'] = 0
df.loc[df['SK']=='90.01.1', '–ü—Ä–æ–¥–∞–∂–∏'] = df['ST'] /1.2

df['–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å'] = 0
df.loc[df['SD']=='90.02.1', '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å'] = df['ST']*-1

pt00 = pd.pivot_table(df, index=['–°—Ç–∞—Ç—å—è'], values=['–î–°'], columns=['–ì–æ–¥'], aggfunc='sum', fill_value='', margins=False).round(2)

pt00 = pt00['–î–°']

pt00 = pt00.transpose()

pt00['–ú–∞—Ä–∂.–ø—Ä–∏–±—ã–ª—å'] = pt00['–ü—Ä–æ–¥–∞–∂–∏'] + pt00['–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å']

st.divider()
st.subheader("–í—ã—Ö–æ–¥–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏")

st.markdown("***–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥–∞–∂, —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –º–∞—Ä–∂.–ø—Ä–∏–±—ã–ª–∏ (—Ç—ã—Å.—Ä—É–±.)***")
st.table(pt00)

st.markdown("***–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂, —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –º–∞—Ä–∂.–ø—Ä–∏–±—ã–ª–∏ (—Ç—ã—Å.—Ä—É–±.)***")
st.bar_chart(pt00, stack=False, width=200, height=500)
# st.area_chart(pt00)
# st.line_chart(pt00)

st.divider()
